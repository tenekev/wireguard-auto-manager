name: Building Executable
run-name: ${{ github.actor }} 
on: [push]

permissions:
  contents: write

jobs:
  build-binary:
    name: Build Wireguard Auto Manager binary
    runs-on: windows-latest
    steps:
      
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup PowerShell module cache
        uses: actions/cache@v3
        id: cacher
        with:
          path: "C:\\Program Files\\WindowsPowerShell\\Modules\\ps2exe"
          key: ${{ runner.os }}-ps2exe

      - name: Install required PowerShell modules
        if: steps.cacher.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module ps2exe

      - name: Build binary
        shell: powershell
        run: |
          . ps2exe wg_auto_manager.ps1 wg_auto_manager.exe -NoConsole -noOutput
  
      - name: Artifacting
        uses: actions/upload-artifact@v4
        with:
          name: my-artifact
          retention-days: 1
          path: |
            *.exe
            *.ps1

  release-binary:
    name: Release Wireguard Auto Manager binary
    runs-on: windows-latest
    steps:
      
      - name: De-artifacting
        uses: actions/download-artifact@v4
        with:
          name: my-artifact
          path: .
      
      - name: Release Wireguard Auto Manager binary
        uses: softprops/action-gh-release@v2
        #if: startsWith(github.ref, 'refs/tags/')
        with:
          tag_name: "latest"
          files: |
            *.ps1
            *.exe
